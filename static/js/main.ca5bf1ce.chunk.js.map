{"version":3,"sources":["components/Containers.js","styles/style.js","styles/fontStyle.js","styles/labelStyle.jsx","styles/buttonStyle.js","components/UserInfoBox.jsx","components/Buttons.js","redux/action.js","components/Fonts.js","PATH.js","pages/StartPage.js","components/TestHeader.jsx","components/QuestionBox.jsx","components/ExampleDesc.jsx","pages/TestExamplePage.js","utils/parseResultData.js","utils/parseJobsData.js","utils/api.js","pages/TestPage.js","components/TestFinishedContent.jsx","utils/parseAnswerData.js","pages/TestFinishedPage.js","components/ResultTable.jsx","components/ValueChart2.jsx","pages/ResultPage.js","pages/NotFoundPage.js","SetPages.js","redux/reducer.js","redux/store.js","App.js","index.js"],"names":["BasicContainer1","styled","div","BasicContainer2","Header","BasicHeader","Body","Footer","BasicFooter","colors","Line","Hover","css","clicked","fontStyle1","fontStyle2","fontStyle3","fontStyle4","fontStyle5","fontStyle6","buttonFont","boxFont1","boxFont2","boxFont3","infoLabel","checked","disabled","testLabel","props","defaultChecked","disable","buttonStyle","InfoWrapper","InfoContainer","Info","p","Input","input","InputBox","InfoLabel","label","Error","error","Name","name","handleChange","type","value","onChange","e","Gender","gender","userGender","htmlFor","id","onClick","male","female","UserInfoBox","button","userInfo","setUserInfo","nameError","genderError","userData","target","console","log","Button","Button2","setName","createAction","setGender","addAnswer","setResult","resetInputs","TitleH1","h1","TitleH2","h2","Title3","Title4","BodyP2","HighLight","span","LowLight","Bold","ROOT_PATH","PATH","START","TEST_EXAMPLE","TEST","TEST_FINISHED","RESULT","Start","useState","userName","setUserName","setUserGender","history","useHistory","dispatch","useDispatch","checkError","data","length","setNameGender","push","ProgressPercentile","ProgressStatus","progressRate","ProgressBar","TestHeader","title","percentile","OptionContainer","OptionBox","OptionLabel","DescContainer","Desc","Option","qNum","score","option","answer","handleClick","isChecked","DescBox","option1","option2","desc1","desc2","QuestionBox","question","score1","score2","optionClick","Alert","ExampleDesc","TestExample","useSelector","state","newAnswer","editResult","responseData","jobValue","user","grade","date","endDtm","split","getDate","result","wonScore","resultList","trim","map","item","items","getList","sort","a","b","parseResult","highScoreKey","slice","lowScoreKey","highScoreValue","lowScoreValue","eduIndex","majorIndex","editEduJobs","jobsEdu","Obj","forEach","key","addObj","editMajorJobs","jobsMajor","getQuestion","axios","get","process","response","qList","qObjList","qitemNo","answer01","answer02","answer03","answer04","answerScore01","answerScore02","getResult","seqKey","postResult","post","url","getJobsByEdu","getJobsByMajor","getJobsResult","Test","currPage","setCurrPage","questionList","setQuestionList","firstQNum","lastQNum","pageQuestion","useEffect","then","realAnswer","Object","keys","Math","ceil","getPercentile","window","scrollTo","curr","filter","i","inThisPage","lastPage","nextClick","BodyText","TestFinishedContent","getData","_gender","getGender","answerString","values","join","getAnswerString","apikey","qestrnSeq","trgetSe","school","email","startDtm","Date","now","answers","TestFinished","borderStyleLight","TableTitle","InfoTable","table","InfoTh","th","InfoTd","td","Table","Thead","thead","Th","KeyTd","ValueTd","UserInfoTable","JobsTable","jobList","makeList","ResultText","GraphText","JobsText","ChartContainer","DatasBox","Td","Tr","tr","ValuesBox","P","Bar","getLabels","getScores","Number","TableBox","hor","Array","fill","ver","Score","Datas","first","second","bars","idx","Values","ValueChart2","valueData","Result","jobEdu","setJobEdu","jobMajor","setJobMajor","NotFound","SetPages","exact","path","to","initState","Reducer","createReducer","builder","addCase","action","payload","store","configureStore","reducer","App","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ca5bf1ce.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const BasicContainer1 = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const BasicContainer2 = styled.div`\n  display: flex;\n  align-self: center;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100vh;\n`;\n\nexport const Header = styled.div`\n  display: grid;\n  width: 100%;\n  grid-template-columns: 1fr auto;\n  padding: 30px 0 10px 0;\n  align-items: end;\n  row-gap: 8px;\n  position: sticky;\n  top: 0;\n  background: white;\n`;\n\nexport const BasicHeader = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: center;\n  margin-top: 50px;\n`;\n\nexport const Body = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  padding-top: 40px;\n`;\n\nexport const Footer = styled.div`\n  padding: 10px 0 30px 0;\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  position: sticky;\n  bottom: 0;\n  background: white;\n`;\n\nexport const BasicFooter = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  margin: 30px 0 60px 0;\n`;\n","import styled, { css } from \"styled-components\";\n\nexport const colors = {\n  blue50: \"#E1F5FE\",\n  blue100: \"#80D8FF\",\n  blue700: \"#0091EA\",\n  gray100: \"#F5F5F5\",\n  gray300: \"#E0E0E0\",\n  gray400: \"#BDBDBD\",\n  gray600: \"#757575\",\n  gray800: \"#424242\",\n};\n\nexport const Line = styled.div`\n  height: 0.5px;\n  width: 100%;\n  background: ${colors.gray400};\n`;\n\nexport const Hover = css`\n  background: ${colors.blue50};\n`;\n\nexport const clicked = css`\n  border: 1px solid ${colors.blue700};\n  color: ${colors.blue700};\n  background: ${colors.blue50};\n  font-weight: 600;\n`;\n\nexport const boxStyle1 = css`\n  border: 1px solid ${colors.blue700};\n  border-radius: 8px;\n`;\n","import { css } from \"styled-components\";\nimport { colors } from \"./style\";\n\nexport const fontStyle1 = css`\n  font-size: 36px;\n  font-weight: 500;\n`;\n\nexport const fontStyle2 = css`\n  font-size: 24px;\n  font-weight: 500;\n`;\n\nexport const fontStyle3 = css`\n  font-weight: 600;\n  font-size: 18px;\n`;\n\nexport const fontStyle4 = css`\n  font-weight: 600;\n  font-size: 16px;\n  line-height: 26px;\n`;\n\nexport const fontStyle5 = css`\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 26px;\n`;\n\nexport const fontStyle6 = css`\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 22px;\n`;\n\nexport const buttonFont = css`\n  ${fontStyle3};\n  color: ${colors.blue700};\n`;\n\nexport const boxFont1 = css`\n  ${fontStyle3};\n  color: ${colors.gray800};\n`;\n\nexport const boxFont2 = css`\n  ${fontStyle3};\n  color: ${colors.gray600};\n`;\n\nexport const boxFont3 = css`\n  ${fontStyle4}\n  color: ${colors.gray800};\n`;\n","import { css } from \"styled-components\";\nimport { colors, clicked, Hover } from \"./style\";\nimport { boxFont3, boxFont1 } from \"./fontStyle\";\n\nexport const infoLabel = css`\n  box-sizing: border-box;\n  flex-grow: 1;\n  height: 40px;\n  border-radius: 8px;\n  border: 1px solid ${colors.gray400};\n  ${boxFont3};\n  text-align: center;\n  line-height: 40px;\n  ${({ checked }) => checked && clicked}\n\n  + label {\n    margin-left: 10px;\n  }\n\n  &:hover {\n    ${({ disabled }) => !disabled && Hover}\n  }\n\n  > input {\n    display: none;\n  }\n`;\n\nexport const testLabel = css`\n  box-sizing: border-box;\n  flex-grow: 1;\n  border-radius: 8px;\n  border: 1px solid ${colors.gray400};\n  ${boxFont1};\n  text-align: center;\n  height: 64px;\n  margin: 20px 0;\n  line-height: 64px;\n\n  ${props => props.defaultChecked && clicked};\n\n  &:hover {\n    ${Hover};\n  }\n\n  > input {\n    display: none;\n  }\n`;\n","import { css } from \"styled-components\";\nimport { colors, Hover } from \"./style\";\nimport { buttonFont } from \"./fontStyle\";\n\nconst disable = css`\n  border: 1px solid ${colors.gray400};\n  color: ${colors.gray400};\n  cursor: default;\n`;\n\nconst buttonStyle = css`\n  height: 60px;\n  padding: 0 40px;\n  ${buttonFont};\n  border: 1px solid ${colors.blue700};\n  border-radius: 8px;\n  background: white;\n  cursor: pointer;\n\n  &:hover {\n    ${({ disabled }) => !disabled && Hover}\n  }\n\n  ${({ disabled }) => disabled && disable}\n`;\n\nexport default buttonStyle;\n","import styled from \"styled-components\";\nimport { colors, Line, clicked, Hover } from \"../styles/style\";\nimport { fontStyle4, fontStyle6 } from \"../styles/fontStyle\";\nimport { infoLabel } from \"../styles/labelStyle\";\nimport buttonStyle from \"../styles/buttonStyle\";\n\nconst InfoWrapper = styled.div`\n  margin-bottom: 20px;\n`;\n\nconst InfoContainer = styled.div`\n  width: 230px;\n  display: flex;\n  flex-direction: column;\n  margin: 8px 0;\n`;\n\nconst Info = styled.p`\n  ${fontStyle4};\n  color: ${colors.gray600};\n  margin-bottom: 5px;\n`;\n\nconst Input = styled.input`\n  box-sizing: border-box;\n  height: 40px;\n  width: 100%;\n  padding: 8px 16px;\n  border-radius: 8px;\n  border: 1px solid ${colors.gray400};\n  ${fontStyle4};\n  color: ${colors.gray800};\n\n  &:focus {\n    outline: none;\n    ${clicked}\n  }\n\n  &:hover {\n    ${({ disabled }) => !disabled && Hover}\n  }\n`;\n\nconst InputBox = styled.div`\n  display: flex;\n`;\n\nconst InfoLabel = styled.label`\n  ${infoLabel};\n  cursor: pointer;\n`;\n\nconst Error = styled.p`\n  ${fontStyle6};\n  color: ${colors.gray400};\n  margin: 4px 0;\n  opacity: ${({ error }) => (error ? 1 : 0)};\n`;\n\nconst UserInfoBox = ({ userInfo, setUserInfo, nameError, genderError }) => {\n  const handleChange = e => {\n    const userData = { type: e.target.type, value: e.target.value };\n    return setUserInfo(userData);\n  };\n  console.log(\"error\", nameError, genderError);\n\n  return (\n    <InfoWrapper>\n      <InfoContainer>\n        <Info>이름</Info>\n        <Name name={userInfo.name} handleChange={handleChange} />\n        <Error error={nameError}>이름을 입력해주세요</Error>\n      </InfoContainer>\n      <Line />\n      <InfoContainer>\n        <Info>성별</Info>\n        <InputBox>\n          <Gender\n            gender=\"male\"\n            handleChange={handleChange}\n            userGender={userInfo.gender}\n          />\n          <Gender\n            gender=\"female\"\n            handleChange={handleChange}\n            userGender={userInfo.gender}\n          />\n        </InputBox>\n        <Error error={genderError}>성별을 선택해주세요</Error>\n      </InfoContainer>\n    </InfoWrapper>\n  );\n};\n\nconst Name = ({ name, handleChange }) => {\n  return <Input type=\"text\" value={name} onChange={e => handleChange(e)} />;\n};\n\nconst Gender = ({ gender, handleChange, userGender }) => {\n  const genders = { male: \"남자\", female: \"여자\" };\n  return (\n    <InfoLabel htmlFor={gender} checked={userGender === gender ? true : false}>\n      <input\n        type=\"radio\"\n        id={gender}\n        name=\"gender\"\n        value={gender}\n        onClick={e => handleChange(e)}\n      />\n      {genders[gender]}\n    </InfoLabel>\n  );\n};\n\nexport const InfoButton = styled.button`\n  ${buttonStyle};\n`;\n\nexport default UserInfoBox;\n","import buttonStyle from \"../styles/buttonStyle\";\nimport styled from \"styled-components\";\n\nconst Button = styled.button`\n  ${buttonStyle};\n  justify-self: center;\n  margin: 0 auto;\n`;\n\nexport const Button2 = styled.button`\n  ${buttonStyle};\n  width: 200px;\n`;\n\nexport default Button;\n","import { createAction } from \"@reduxjs/toolkit\";\n\nexport const setName = createAction(\"SET_NAME\");\nexport const setGender = createAction(\"SET_GENDER\");\nexport const addAnswer = createAction(\"ADD_ANSWER\");\nexport const setResult = createAction(\"SET_RESULT\");\nexport const resetInputs = createAction(\"RESET_INPUTS\");\n","import styled from \"styled-components\";\nimport {\n  fontStyle1,\n  fontStyle2,\n  fontStyle4,\n  fontStyle5,\n  fontStyle6,\n} from \"../styles/fontStyle\";\nimport { colors } from \"../styles/style\";\n\nexport const TitleH1 = styled.h1`\n  ${fontStyle1};\n  color: ${colors.gray800};\n  margin-bottom: 16px;\n`;\n\nexport const TitleH2 = styled.h2`\n  ${fontStyle2};\n  color: ${colors.gray600};\n`;\n\nexport const Title3 = styled.h2`\n  ${fontStyle2};\n  color: ${colors.gray800};\n  margin-bottom: 8px;\n`;\n\nexport const Title4 = styled.h1`\n  ${fontStyle1};\n  color: ${colors.gray800};\n`;\n\nexport const BodyBoldP1 = styled.p`\n  ${fontStyle4};\n  color: ${colors.gray800};\n`;\n\nexport const BodyBoldP2 = styled.p`\n  ${fontStyle4};\n  color: ${colors.gray600};\n`;\n\nexport const BodyP1 = styled.p`\n  ${fontStyle5};\n  color: ${colors.gray800};\n`;\n\nexport const BodyP2 = styled.p`\n  ${fontStyle5};\n  color: ${colors.gray600};\n`;\n\nexport const DescP = styled.p`\n  ${fontStyle6};\n  color: ${colors.gray600};\n`;\n\nexport const HighLight = styled.span`\n  ${fontStyle4};\n  color: ${colors.blue700};\n`;\n\nexport const LowLight = styled.span`\n  ${fontStyle4};\n  color: ${colors.gray400};\n`;\n\nexport const Bold = styled.span`\n  font-weight: 600;\n`;","const ROOT_PATH = \"/job-value-test\";\n\nconst PATH = {\n  START: ROOT_PATH,\n  TEST_EXAMPLE: `${ROOT_PATH}/test-example`,\n  TEST: `${ROOT_PATH}/test`,\n  TEST_FINISHED: `${ROOT_PATH}/test-finished`,\n  RESULT: `${ROOT_PATH}/result`,\n};\n\nexport default PATH;\n","import { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { BasicContainer2 } from \"../components/Containers\";\nimport UserInfoBox from \"../components/UserInfoBox\";\nimport Button from \"../components/Buttons\";\nimport { setGender, setName } from \"../redux/action\";\nimport { TitleH1 } from \"../components/Fonts\";\nimport PATH from \"../PATH\";\n\nconst Start = () => {\n  const [userName, setUserName] = useState(\"\");\n  const [userGender, setUserGender] = useState(\"\");\n  const userInfo = { name: userName, gender: userGender };\n\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const setUserInfo = userData => {\n    userData.type === \"text\"\n      ? setUserName(userData.value)\n      : setUserGender(userData.value);\n  };\n\n  const setNameGender = userInfo => {\n    dispatch(setName(userInfo.name));\n    dispatch(setGender(userInfo.gender));\n  };\n\n  const handleSubmit = () => {\n    setNameGender(userInfo);\n    history.push(PATH.TEST_EXAMPLE);\n    console.log(PATH.TEST_EXAMPLE);\n  };\n\n  const checkError = data => (data.length > 0 ? false : true);\n\n  return (\n    <BasicContainer2>\n      <TitleH1>직업가치관검사</TitleH1>\n      <UserInfoBox\n        userInfo={userInfo}\n        setUserInfo={setUserInfo}\n        nameError={checkError(userName)}\n        genderError={checkError(userGender)}\n      />\n      <Button\n        type=\"button\"\n        disabled={!userName || !userGender}\n        onClick={handleSubmit}\n      >\n        검사하기\n      </Button>\n    </BasicContainer2>\n  );\n};\n\nexport default Start;\n","import styled from \"styled-components\";\nimport { boxFont2 } from \"../styles/fontStyle\";\nimport { colors } from \"../styles/style\";\nimport { TitleH2 } from \"./Fonts\";\nimport { Header } from \"./Containers\";\n\nconst ProgressPercentile = styled.p`\n  ${boxFont2};\n`;\n\nconst ProgressStatus = styled.div`\n  grid-column: 1 / span 2;\n  background: ${colors.gray100};\n  width: ${({ progressRate }) =>\n    progressRate ? progressRate.progressRate : 100}%;\n  height: 3px;\n  border-radius: 1.5px;\n  position: relative;\n  transition: width 0.5s;\n\n  > div {\n    background: ${colors.blue700};\n    position: absolute;\n  }\n`;\n\nconst ProgressBar = progressRate => {\n  return (\n    <>\n      <ProgressStatus>\n        <ProgressStatus progressRate={progressRate} />\n      </ProgressStatus>\n    </>\n  );\n};\n\nconst TestHeader = ({ title, percentile }) => {\n  return (\n    <Header>\n      <TitleH2>{title}</TitleH2>\n      <ProgressPercentile>{percentile}%</ProgressPercentile>\n      <ProgressBar progressRate={percentile} />\n    </Header>\n  );\n};\n\nexport default TestHeader;\n","import styled from \"styled-components\";\nimport { fontStyle6 } from \"../styles/fontStyle\";\nimport { colors } from \"../styles/style\";\nimport { testLabel } from \"../styles/labelStyle\";\nimport { BodyP2 } from \"./Fonts\";\n\nconst OptionContainer = styled.div`\n  box-sizing: border-box;\n  padding: 0 20px 50px 20px;\n  width: 100%;\n  border-bottom: 0.5px solid ${colors.gray400};\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 50px;\n`;\n\nconst OptionBox = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  column-gap: 10px;\n`;\n\nconst OptionLabel = styled.label`\n  ${testLabel}\n  cursor: pointer;\n`;\n\nconst DescContainer = styled.div`\n  display: flex;\n`;\n\nconst Desc = styled.p`\n  ${fontStyle6};\n  color: ${colors.gray600};\n  width: 50%;\n  padding-left: 10px;\n`;\n\nconst QuestionBox = ({\n  qNum,\n  question,\n  option1,\n  option2,\n  desc1,\n  desc2,\n  score1,\n  score2,\n  optionClick,\n  answer,\n}) => {\n  return (\n    <OptionContainer>\n      <BodyP2>\n        Q{qNum}. {question}\n      </BodyP2>\n      <OptionBox>\n        <Option\n          qNum={qNum}\n          score={score1}\n          option={option1}\n          onClick={optionClick}\n          answer={answer}\n        />\n        <Option\n          qNum={qNum}\n          score={score2}\n          option={option2}\n          onClick={optionClick}\n          answer={answer}\n        />\n      </OptionBox>\n      <DescBox\n        option1={option1}\n        option2={option2}\n        desc1={desc1}\n        desc2={desc2}\n      />\n    </OptionContainer>\n  );\n};\n\nconst Option = ({ qNum, score, option, onClick, answer }) => {\n  const handleClick = e => {\n    const { name, value } = e.target;\n    onClick(name, value);\n  };\n\n  const isChecked = (name, value) => {\n    return !answer ? false : answer[name] === value ? true : false;\n  };\n\n  return (\n    <OptionLabel htmlFor={score} defaultChecked={isChecked(qNum, score)}>\n      <input\n        type=\"radio\"\n        id={score}\n        name={qNum}\n        value={score}\n        onClick={e => handleClick(e)}\n        defaultChecked={isChecked(qNum, score)}\n      />\n      {option}\n    </OptionLabel>\n  );\n};\n\nconst DescBox = ({ option1, option2, desc1, desc2 }) => {\n  return (\n    <DescContainer>\n      <Desc>\n        *{option1} : {desc1}\n      </Desc>\n      <Desc>\n        *{option2} : {desc2}\n      </Desc>\n    </DescContainer>\n  );\n};\n\nexport default QuestionBox;\n","import styled from \"styled-components\";\nimport { BodyP2, Bold } from \"./Fonts\";\nimport { colors } from \"../styles/style\";\nimport { fontStyle3, fontStyle4 } from \"../styles/fontStyle\";\n\nconst DescBox = styled.div`\n  border-bottom: 0.5px solid ${colors.gray400};\n  padding: 0 20px 40px;\n  margin-bottom: 40px;\n  > div {\n    height: 8px;\n  }\n`;\n\nconst Title = styled.p`\n  ${fontStyle3};\n  color: ${colors.blue700};\n  margin-bottom: 16px;\n`;\n\nconst Alert = styled.p`\n  ${fontStyle4};\n  color: ${colors.blue700};\n`;\n\nconst ExampleDesc = () => {\n  return (\n    <DescBox>\n      <BodyP2>\n        <Bold>\n          직업과 관련된 두 개 가치 중에서 자기에게 더 중요한 가치에 표시\n        </Bold>\n        하세요.\n        <br />\n        가치의 뜻을 잘 모르겠다면 문항 아래에 있는 가치의 설명을 확인해보세요\n      </BodyP2>\n      <div />\n      <BodyP2>\n        만약 ‘능력발휘’보다 ‘자율성’이 더 중요하다면 ‘자율성’을 체크하세요.\n        <br />\n        반대로, ‘능력발휘’가 ‘자율성’보다 중요하다면 ‘능력발휘’에 체크하세요.\n      </BodyP2>\n      <div />\n      <Alert>모든 문항을 선택해야 다음 페이지로 넘어갈 수 있습니다.</Alert>\n    </DescBox>\n  );\n};\n\nexport default ExampleDesc;\n","import { useHistory } from \"react-router-dom\";\nimport { BasicContainer1, Body } from \"../components/Containers\";\nimport TestHeader from \"../components/TestHeader\";\nimport QuestionBox from \"../components/QuestionBox\";\nimport Button from \"../components/Buttons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addAnswer } from \"../redux/action\";\nimport ExampleDesc from \"../components/ExampleDesc\";\nimport PATH from \"../PATH\";\n\nconst TestExample = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const answer = useSelector(state => state.answer);\n\n  const optionClick = (qNum, score) => {\n    const newAnswer = { ...answer, [qNum]: score };\n    dispatch(addAnswer(newAnswer));\n  };\n\n  const checkActiveExam = () => {\n    return answer[0] ? false : true;\n  };\n\n  return (\n    <BasicContainer1>\n      <TestHeader title=\"검사예시\" percentile={answer[0] ? 100 : 0} />\n      <Body>\n        <ExampleDesc />\n        <QuestionBox\n          key=\"0\"\n          qNum=\"0\"\n          option1=\"능력발휘\"\n          option2=\"자율성\"\n          score1=\"01\"\n          score2=\"02\"\n          desc1=\"직업을 통해 자신의 능력을 발휘하는 것입니다.\"\n          desc2=\"일하는 시간과 방식에 대해서 스스로 결정할 수 있는 것입니다.\"\n          optionClick={optionClick}\n          answer={answer}\n          question=\"직업과 관련된 두 개의 가치 중에서 자신에게 더 중요한 가치에 표시하세요.\"\n        />\n      </Body>\n      <Button\n        type=\"button\"\n        onClick={() => history.push(PATH.TEST)}\n        disabled={checkActiveExam()}\n      >\n        검사하기\n      </Button>\n    </BasicContainer1>\n  );\n};\n\nexport default TestExample;\n","const editResult = (responseData, jobValue) => {\n    const getDate = endDtm => {\n      return endDtm.split(\"T\")[0];\n    };\n  \n    const parseResult = wonScore => {\n      const resultList = wonScore.trim().split(\" \");\n  \n      const getList = item => {\n        const items = item.split(\"=\");\n        return [items[0], items[1]];\n      };\n  \n      const resultDraft = resultList.map(item => getList(item));\n      const result = resultDraft\n        .map(item => [item[0], jobValue[item[0]], item[1]])\n        .sort((a, b) => b[2] - a[2]);\n      return result;\n    };\n  \n    const name = responseData.user.name;\n    const gender = responseData.user.grade === \"100323\" ? \"남자\" : \"여자\";\n    const endDtm = responseData.result.endDtm;\n    const date = getDate(endDtm);\n    const wonScore = responseData.result.wonScore;\n    const result = parseResult(wonScore);\n    const highScoreKey = result.slice(0, 2).map(item => item[0]);\n    const lowScoreKey = result.slice(-2).map(item => item[0]);\n    const highScoreValue = result.slice(0, 2).map(item => item[1]);\n    const lowScoreValue = result.slice(-2).map(item => item[1]);\n  \n    return {\n      name,\n      gender,\n      date,\n      result,\n      highScoreKey,\n      highScoreValue,\n      lowScoreKey,\n      lowScoreValue,\n    };\n};\n  \nexport default editResult;","export const eduIndex = {\n  1: \"중졸\",\n  2: \"고졸\",\n  3: \"전문대졸\",\n  4: \"대졸\",\n  5: \"대학원졸\",\n};\nexport const majorIndex = {\n  0: \"계열무관\",\n  1: \"인문\",\n  2: \"사회\",\n  3: \"교육\",\n  4: \"공학\",\n  5: \"자연\",\n  6: \"의학\",\n  7: \"예체능\",\n};\n\nexport const editEduJobs = (jobsEdu, eduIndex) => {\n  const Obj = {};\n  const addObj = (Obj, item) => {\n    const key = eduIndex[item[2]];\n    const value = item[1];\n    Obj[key] ? (Obj[key] = [...Obj[key], value]) : (Obj[key] = [value]);\n    return Obj;\n  };\n  jobsEdu.forEach(item => addObj(Obj, item));\n  return Obj;\n};\n\nexport const editMajorJobs = (jobsMajor, majorIndex) => {\n  const Obj = {};\n  const addObj = (Obj, item) => {\n    const key = majorIndex[item[2]];\n    const value = item[1];\n    Obj[key] ? (Obj[key] = [...Obj[key], value]) : (Obj[key] = [value]);\n    key !== \"계열무관\" &&\n      (Obj[\"계열무관\"]\n        ? (Obj[\"계열무관\"] = [...Obj[\"계열무관\"], value])\n        : (Obj[\"계열무관\"] = [value]));\n    return Obj;\n  };\n  jobsMajor.forEach(item => addObj(Obj, item));\n  return Obj;\n};\n","import axios from \"axios\";\nimport editResult from \"./parseResultData\";\nimport {\n  eduIndex,\n  majorIndex,\n  editEduJobs,\n  editMajorJobs,\n} from \"./parseJobsData\";\n\nconst KEY = process.env.REACT_APP_KEY;\n\n// 질문 데이터\nexport const getQuestion = async () => {\n  const response = await axios.get(\n    `https://www.career.go.kr/inspct/openapi/test/questions?apikey=${KEY}&q=6`,\n  );\n\n  const qList = response.data.RESULT;\n  const qObjList = qList.map(item => ({\n    qNum: item.qitemNo,\n    option1: item.answer01,\n    option2: item.answer02,\n    desc1: item.answer03,\n    desc2: item.answer04,\n    score1: item.answerScore01,\n    score2: item.answerScore02,\n    question: item.question,\n  }));\n  return qObjList;\n};\n\n// 결과1. 직업 가치 데이터\nconst jobValue = {\n  1: \"능력발휘\",\n  2: \"자율성\",\n  3: \"보수\",\n  4: \"안정성\",\n  5: \"사회적 인정\",\n  6: \"사회봉사\",\n  7: \"자기계발\",\n  8: \"창의성\",\n};\n\nconst getResult = async seqKey => {\n  const response = await axios.get(\n    `https://www.career.go.kr/inspct/api/psycho/report?seq=${seqKey}`,\n  );\n  const result = editResult(response.data, jobValue);\n  return result;\n};\n\nexport const postResult = async data => {\n  try {\n    const response = await axios.post(\n      \"https://www.career.go.kr/inspct/openapi/test/report\",\n      data,\n    );\n    const seqKey = response.data.RESULT.url.split(\"=\")[1];\n    const result = await getResult(seqKey);\n    return { ...result };\n  } catch (e) {\n    console.log(e);\n  }\n};\n\n// 결과2. 직업 정보 데이터\nconst getJobsByEdu = async highScoreKey => {\n  const response = await axios.get(\n    `https://inspct.career.go.kr/inspct/api/psycho/value/jobs?no1=${highScoreKey[0]}&no2=${highScoreKey[1]}`,\n  );\n  return editEduJobs(response.data, eduIndex);\n};\n\nconst getJobsByMajor = async highScoreKey => {\n  const response = await axios.get(\n    `https://inspct.career.go.kr/inspct/api/psycho/value/majors?no1=${highScoreKey[0]}&no2=${highScoreKey[1]}`,\n  );\n  return editMajorJobs(response.data, majorIndex);\n};\n\nexport const getJobsResult = async result => {\n  try {\n    const jobsEdu = await getJobsByEdu(result.highScoreKey);\n    const jobsMajor = await getJobsByMajor(result.highScoreKey);\n    return [jobsEdu, jobsMajor];\n  } catch (e) {\n    console.log(e);\n  }\n};\n","/* eslint-disable no-unused-expressions */\nimport { useHistory } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addAnswer } from \"../redux/action\";\nimport { BasicContainer1, Body, Footer } from \"../components/Containers\";\nimport TestHeader from \"../components/TestHeader\";\nimport QuestionBox from \"../components/QuestionBox\";\nimport { Button2 } from \"../components/Buttons\";\nimport { getQuestion } from \"../utils/api\";\nimport PATH from \"../PATH\";\n\nconst Test = () => {\n  const history = useHistory();\n  const [currPage, setCurrPage] = useState(1);\n  const [questionList, setQuestionList] = useState();\n\n  const answer = useSelector(state => state.answer);\n  const dispatch = useDispatch();\n\n  const firstQNum = (currPage - 1) * 5 + 1;\n  const lastQNum = currPage * 5;\n  const pageQuestion = questionList\n    ? questionList.slice(firstQNum - 1, lastQNum)\n    : [];\n\n  useEffect(() => {\n    getQuestion().then(setQuestionList);\n  }, []);\n\n  const optionClick = (qNum, score) => {\n    const newAnswer = { ...answer, [qNum]: score };\n    dispatch(addAnswer(newAnswer));\n  };\n\n  const prevClick = () => {\n    window.scrollTo(0, 0);\n    if (currPage === 1) {\n      history.push(PATH.TEST_EXAMPLE);\n    } else {\n      setCurrPage(curr => curr - 1);\n    }\n  };\n\n  const nextClick = () => {\n    window.scrollTo(0, 0);\n    const lastPage = Math.ceil(questionList.length / 5);\n    currPage === lastPage && history.push(PATH.TEST_FINISHED);\n    setCurrPage(curr => curr + 1);\n  };\n\n  const checkActive = () => {\n    const inThisPage = i => firstQNum <= i && i <= lastQNum;\n    const realAnswer = Object.keys(answer).slice(1);\n    const checkCounter = realAnswer.filter(i => inThisPage(i));\n    return checkCounter.length !== pageQuestion.length;\n  };\n\n  const getPercentile = () => {\n    const realAnswer = Object.keys(answer).slice(1);\n    return !questionList\n      ? 0\n      : Math.ceil((realAnswer.length / questionList.length) * 100);\n  };\n\n  return (\n    <BasicContainer1>\n      <TestHeader title=\"검사진행\" percentile={getPercentile()} />\n      <Body>\n        {questionList &&\n          pageQuestion.map(item => (\n            <QuestionBox\n              key={item.qNum}\n              qNum={item.qNum}\n              question={item.question}\n              option1={item.option1}\n              option2={item.option2}\n              desc1={item.desc1}\n              desc2={item.desc2}\n              score1={item.score1}\n              score2={item.score2}\n              optionClick={optionClick}\n              answer={answer}\n            />\n          ))}\n      </Body>\n      <Footer>\n        <Button2 type=\"button\" name=\"prev\" onClick={() => prevClick()}>\n          이전\n        </Button2>\n        <Button2\n          type=\"button\"\n          name=\"next\"\n          disabled={checkActive()}\n          onClick={() => nextClick()}\n        >\n          다음\n        </Button2>\n      </Footer>\n    </BasicContainer1>\n  );\n};\n\nexport default Test;\n","import styled from \"styled-components\";\nimport { fontStyle4, fontStyle5 } from \"../styles/fontStyle\";\nimport { colors } from \"../styles/style\";\nimport { Title3 } from \"./Fonts\";\n\nconst BodyText = styled.p`\n  ${fontStyle5};\n  color: ${colors.gray800};\n  margin: 14px 0 56px 0;\n  text-align: center;\n\n  > div {\n    height: 8px;\n  }\n`;\n\nexport const HighLight = styled.span`\n  ${fontStyle4};\n  color: ${colors.blue700};\n`;\n\nexport const LowLight = styled.span`\n  ${fontStyle4};\n  color: ${colors.gray400};\n`;\n\nexport const Bold = styled.span`\n  font-weight: 600;\n`;\n\nconst TestFinishedContent = ({ name, highScoreValue, lowScoreValue }) => {\n  return (\n    <>\n      <Title3>검사가 완료되었습니다.</Title3>\n      <BodyText>\n        검사결과는 여러분이 직업을 선택할 때 상대적으로 어떠한 가치를 중요하게\n        생각하는지를 알려주고,\n        <br />\n        중요 가치를 충족시켜줄 수 있는 직업에 대해 생각해 볼 기회를 제공합니다.\n        <div />\n        직업생활과 관련하여 <Bold>{name}</Bold>님은&nbsp;\n        <HighLight>{highScoreValue[0]}</HighLight>(와)과&nbsp;\n        <HighLight>{highScoreValue[1]}</HighLight>(을)를 가장 중요하게\n        생각합니다.\n        <br />\n        반면에 <LowLight>{lowScoreValue[0]}</LowLight>\n        ,&nbsp;\n        <LowLight>{lowScoreValue[1]}</LowLight>(은)는 상대적으로 덜 중요하게\n        생각합니다.\n      </BodyText>\n    </>\n  );\n};\n\nexport default TestFinishedContent;\n","const getAnswerString = answer => {\n    const realAnswer = Object.values(answer).slice(1);\n    const answerString = realAnswer\n      .map((value, i) => `B${i + 1}=${value}`)\n      .join(\" \");\n    return answerString;\n  };\n  \n  const getTimeStamp = () => {\n    return Date.now();\n  };\n  \n  const getGender = gender => {\n    const genderMap = { male: \"100323\", female: \"100324\" };\n    return genderMap[gender];\n  };\n  \nconst getData = (name, _gender, answer) => {\n    const gender = getGender(_gender);\n    const answerString = getAnswerString(answer);\n    const timeStamp = getTimeStamp();\n    return (\n        {\n            apikey: \"91ba033859063edfb432487e1853ddb1\",\n            qestrnSeq: \"6\",\n            trgetSe: \"100209\",\n            name: name,\n            gender: gender,\n            school: \"\",\n            grade: \"\",\n            email: \"\",\n            startDtm: timeStamp,\n            answers: answerString,\n    }\n    );\n}\n\nexport default getData;","import { useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport Button from \"../components/Buttons\";\nimport TestFinishedContent from \"../components/TestFinishedContent\";\nimport { BasicContainer2 } from \"../components/Containers\";\nimport { setResult } from \"../redux/action\";\nimport getData from \"../utils/parseAnswerData\";\nimport { postResult } from \"../utils/api\";\nimport PATH from \"../PATH\";\n\nconst TestFinished = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const name = useSelector(state => state.name);\n  const answer = useSelector(state => state.answer);\n  const gender = useSelector(state => state.gender);\n  const result = useSelector(state => state.result);\n\n  useEffect(() => {\n    postResult(getData(name, gender, answer)).then(result =>\n      dispatch(setResult(result)),\n    );\n  }, []);\n\n  console.log(result);\n\n  return (\n    <BasicContainer2>\n      {result && (\n        <TestFinishedContent\n          name={name}\n          highScoreValue={result.highScoreValue}\n          lowScoreValue={result.lowScoreValue}\n        />\n      )}\n      <Button onClick={() => history.push(PATH.RESULT)}>결과보기</Button>\n    </BasicContainer2>\n  );\n};\n\nexport default TestFinished;\n","import styled, { css } from \"styled-components\";\nimport { colors } from \"../styles/style\";\nimport { boxFont1, fontStyle4, fontStyle5 } from \"../styles/fontStyle\";\nimport { BodyP2, Bold, HighLight, LowLight } from \"./Fonts\";\n\nconst borderStyleLight = css`\n  border-top: 0.5px solid ${colors.gray300};\n  border-bottom: 0.5px solid ${colors.gray300};\n  border-left: 8px solid white;\n  border-right: 8px solid white;\n`;\n\nexport const TableTitle = styled.p`\n  ${boxFont1};\n  width: 100%;\n  padding: 15px 0;\n  text-align: center;\n  color: ${colors.blue700};\n  background: ${colors.blue50};\n  margin-top: 16px;\n  border-top-left-radius: 8px;\n  border-top-right-radius: 8px;\n`;\n\nconst InfoTable = styled.table`\n  width: 100%;\n  border-spacing: 8px 0;\n  margin: 24px 0 60px;\n`;\n\nconst InfoTh = styled.th`\n  padding: 10px 0;\n  background: ${colors.blue50};\n  border-top-left-radius: 8px;\n  border-top-right-radius: 8px;\n  color: ${colors.blue700};\n`;\n\nconst InfoTd = styled.td`\n  ${borderStyleLight};\n  border-top: none;\n  ${fontStyle4};\n  color: ${colors.gray600};\n  padding: 10px 20px;\n  text-align: center;\n`;\n\nconst Table = styled.table`\n  width: 100%;\n  border-collapse: collapse;\n  margin-bottom: 24px;\n`;\n\nconst Thead = styled.thead`\n  ${fontStyle4};\n  color: ${colors.gray800};\n`;\n\nconst Th = styled.th`\n  padding: 12px 0;\n`;\n\nconst KeyTd = styled.td`\n  ${borderStyleLight};\n  ${fontStyle4};\n  text-align: center;\n  color: ${colors.gray600};\n  width: 150px;\n`;\n\nconst ValueTd = styled.td`\n  ${borderStyleLight};\n  ${fontStyle5};\n  color: ${colors.gray600};\n  padding: 10px 20px;\n`;\n\nexport const UserInfoTable = ({ data }) => {\n  return (\n    <InfoTable>\n      <Thead>\n        <InfoTh>이름</InfoTh>\n        <InfoTh>성별</InfoTh>\n        <InfoTh>검사일</InfoTh>\n      </Thead>\n      <tbody>\n        <tr>\n          <InfoTd>{data.name}</InfoTd>\n          <InfoTd>{data.gender}</InfoTd>\n          <InfoTd>{data.date}</InfoTd>\n        </tr>\n      </tbody>\n    </InfoTable>\n  );\n};\n\nexport const JobsTable = ({ data }) => {\n  const makeList = key => {\n    const values = data[key].join(\", \");\n    return (\n      <tr key={key}>\n        <KeyTd>{key}</KeyTd>\n        <ValueTd>{values}</ValueTd>\n      </tr>\n    );\n  };\n  const jobList = Object.keys(data).map(key => makeList(key));\n\n  return (\n    <Table>\n      <Thead>\n        <Th>분야</Th>\n        <Th>직업</Th>\n      </Thead>\n      <tbody>{jobList}</tbody>\n    </Table>\n  );\n};\n\nexport const ResultText = () => (\n  <BodyP2>\n    <Bold>\n      직업가치관이란 직업을 선택할 때 영향을 끼치는 자신만의 믿음과 신념\n    </Bold>\n    입니다. 따라서 여러분의 직업생활과 관련하여 포기하지 않는 무게중심의 역할을\n    한다고 볼 수 있습니다. 직업가치관검사는 여러분이 직업을 선택할 때 상대적으로\n    어떠한 가치를 중요하게 생각하는지를 알려줍니다. 또한 본인이 가장 중요하게\n    생각하는 가치를 충족시켜줄 수 있는 직업에 대해 생각해 볼 기회를 제공합니다.\n  </BodyP2>\n);\n\nexport const GraphText = ({ name, highScoreValue, lowScoreValue }) => (\n  <BodyP2>\n    직업생활과 관련하여 <Bold>{name}</Bold>님은{\" \"}\n    <HighLight>{highScoreValue[0]}</HighLight>,{\" \"}\n    <HighLight>{highScoreValue[1]}</HighLight>(을)를 가장 중요하게 생각합니다.\n    <br />\n    반면에 <LowLight>{lowScoreValue[0]}</LowLight>,{\" \"}\n    <LowLight>{lowScoreValue[1]}</LowLight>(은)는 상대적으로 덜 중요하게\n    생각합니다.\n  </BodyP2>\n);\n\nexport const JobsText = ({ name, highScoreValue }) => (\n  <BodyP2>\n    <Bold>{name}</Bold>님이 중요하게 생각하는{\" \"}\n    <HighLight>{highScoreValue[0]}</HighLight>(와)과{\" \"}\n    <HighLight>{highScoreValue[1]}</HighLight>\n    (을)를 만족시킬 수 있는 직업은 다음과 같습니다.\n  </BodyP2>\n);\n","import styled from \"styled-components\";\nimport { fontStyle4, fontStyle6 } from \"../styles/fontStyle\";\nimport { colors } from \"../styles/style\";\n\nconst ChartContainer = styled.div`\n  position: relative;\n  margin-top: 16px;\n`;\n\nconst Table = styled.table`\n  height: 400px;\n  width: 100%;\n  border: 0.5px solid ${colors.gray300};\n  border-collapse: collapse;\n`;\n\nconst DatasBox = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  height: 400px;\n  width: 100%;\n  display: flex;\n  align-items: flex-end;\n  justify-content: space-around;\n`;\n\nconst Td = styled.td`\n  border: 0.5px solid ${colors.gray300};\n`;\n\nconst Tr = styled.tr`\n  border: 0.5px solid ${colors.gray300};\n`;\n\nconst ValuesBox = styled.div`\n  display: grid;\n  grid-template-columns: repeat(8, 1fr);\n  margin: 10px 0 60px;\n`;\n\nconst P = styled.p`\n  text-align: center;\n  width: 100%;\n  ${fontStyle4};\n  color: ${colors.gray600};\n`;\n\nconst Bar = styled.div`\n  width: 90px;\n  height: ${({ score }) => score * 40}px;\n  background: rgba(0, 145, 234, 0.2);\n  border-top-left-radius: 8px;\n  border-top-right-radius: 8px;\n  display: flex;\n  justify-content: center;\n`;\n\nconst getLabels = data => data.map(item => item[1]);\nconst getScores = data => data.map(item => Number(item[2]));\n\nconst TableBox = () => {\n  const hor = Array(8)\n    .fill(\"\")\n    .map(item => <Td></Td>);\n  const ver = Array(10)\n    .fill(\"\")\n    .map(item => <Tr>{hor}</Tr>);\n\n  return <Table>{ver}</Table>;\n};\n\nconst Score = styled.span`\n  ${fontStyle6};\n  color: ${colors.blue700};\n  margin-top: -24px;\n`;\n\nconst Datas = ({ data, highScoreKey }) => {\n  const first = Number(highScoreKey[0][0]);\n  const second = Number(highScoreKey[1][0]);\n  const bars = data.map((score, idx) => (\n    <Bar score={score}>\n      <Score>\n        {idx + 1 === first ? \"★★\" : idx + 1 === second ? \"★\" : \"\"}\n        {score}\n      </Score>\n    </Bar>\n  ));\n  return <DatasBox>{bars}</DatasBox>;\n};\n\nconst Values = ({ data }) => {\n  const value = data.map(value => <P>{value}</P>);\n  return <ValuesBox>{value}</ValuesBox>;\n};\n\nconst ValueChart2 = ({ valueData }) => {\n  const highScoreKey = [...valueData].slice(0, 2);\n  const data = [...valueData].sort();\n\n  return (\n    <ChartContainer>\n      <TableBox />\n      <Datas data={getScores(data)} highScoreKey={highScoreKey} />\n      <Values data={getLabels(data)} />\n    </ChartContainer>\n  );\n};\n\nexport default ValueChart2;\n","import { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { resetInputs } from \"../redux/action\";\nimport {\n  UserInfoTable,\n  JobsTable,\n  TableTitle,\n  ResultText,\n  GraphText,\n  JobsText,\n} from \"../components/ResultTable\";\nimport Button from \"../components/Buttons\";\nimport { Title4, Title3 } from \"../components/Fonts\";\nimport {\n  BasicContainer1,\n  BasicHeader,\n  BasicFooter,\n  Body,\n} from \"../components/Containers\";\nimport ValueChart2 from \"../components/ValueChart2\";\nimport { getJobsResult } from \"../utils/api\";\nimport PATH from \"../PATH\";\n\nconst Result = () => {\n  const result = useSelector(state => state.result);\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const [jobEdu, setJobEdu] = useState();\n  const [jobMajor, setJobMajor] = useState();\n\n  useEffect(() => {\n    getJobsResult(result).then(data => {\n      if (data) {\n        setJobEdu(data[0]);\n        setJobMajor(data[1]);\n      }\n    });\n  }, []);\n\n  const handleClick = () => {\n    dispatch(resetInputs());\n    history.push(PATH.START);\n  };\n\n  return (\n    <BasicContainer1>\n      <BasicHeader>\n        <Title4>직업가치관검사 결과표</Title4>\n      </BasicHeader>\n      {jobEdu && jobMajor && (\n        <Body>\n          <ResultText />\n          <UserInfoTable data={result} />\n          <Title3>직업가치관 결과</Title3>\n          <GraphText\n            name={result.name}\n            highScoreValue={result.highScoreValue}\n            lowScoreValue={result.lowScoreValue}\n          />\n          <ValueChart2 valueData={result.result} />\n          <Title3>가치관과 관련이 높은 직업</Title3>\n          <JobsText name={result.name} highScoreValue={result.highScoreValue} />\n          <TableTitle>종사자 평균 학력별</TableTitle>\n          <JobsTable data={jobEdu} />\n          <TableTitle>종사자 평균 전공별</TableTitle>\n          <JobsTable data={jobMajor} />\n        </Body>\n      )}\n      <BasicFooter>\n        <Button onClick={() => handleClick()}>다시 검사하기</Button>\n      </BasicFooter>\n    </BasicContainer1>\n  );\n};\n\nexport default Result;\n","import { useHistory } from \"react-router-dom\";\nimport { TitleH1 } from \"../components/Fonts\";\nimport { BasicContainer2 } from \"../components/Containers\";\nimport Button from \"../components/Buttons\";\nimport PATH from \"../PATH\";\n\nconst NotFound = () => {\n  const history = useHistory();\n\n  return (\n    <BasicContainer2>\n      <TitleH1>페이지를 찾을 수 없습니다</TitleH1>\n      <Button type=\"submit\" onClick={() => history.push(PATH.START)}>\n        시작 화면으로 가기\n      </Button>\n    </BasicContainer2>\n  );\n};\n\nexport default NotFound;\n","import { BrowserRouter, Redirect, Route, Switch } from \"react-router-dom\";\nimport Start from \"./pages/StartPage\";\nimport TestExample from \"./pages/TestExamplePage\";\nimport Test from \"./pages/TestPage\";\nimport TestFinished from \"./pages/TestFinishedPage\";\nimport Result from \"./pages/ResultPage\";\nimport NotFound from \"./pages/NotFoundPage\";\nimport PATH from \"./PATH\";\n\nconst SetPages = () => {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Redirect exact path=\"/\" to={PATH.START} />\n        <Route exact path={PATH.START}>\n          <Start />\n        </Route>\n        <Route path={PATH.TEST_EXAMPLE}>\n          <TestExample />\n        </Route>\n        <Route path={PATH.TEST}>\n          <Test />\n        </Route>\n        <Route path={PATH.TEST_FINISHED}>\n          <TestFinished />\n        </Route>\n        <Route path={PATH.RESULT}>\n          <Result />\n        </Route>\n        <Route>\n          <NotFound />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default SetPages;\n","import { createReducer } from \"@reduxjs/toolkit\";\nimport { setName, setGender, addAnswer, setResult, resetInputs } from \"./action\";\n\nconst initState = {\n  name: \"\",\n  gender: \"\",\n  answer: {},\n  result: null,\n};\n\nconst Reducer = createReducer(initState, builder => {\n  builder.addCase(setName, (state, action) => {\n    state.name = action.payload;\n  });\n  builder.addCase(setGender, (state, action) => {\n    state.gender = action.payload;\n  });\n  builder.addCase(addAnswer, (state, action) => {\n    state.answer = { ...state.answer, ...action.payload };\n  });\n  builder.addCase(setResult, (state, action) => {\n    state.result = action.payload;\n  });\n  builder.addCase(resetInputs, (state, action) => {\n    return initState;\n  });\n});\n\nexport default Reducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport Reducer from \"./reducer\";\n\nconst store = configureStore({\n  reducer: Reducer,\n});\n\nexport default store;\n","import \"./App.css\";\nimport { Provider } from \"react-redux\";\nimport SetPages from \"./SetPages\";\nimport store from \"./redux/store\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <SetPages />\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}